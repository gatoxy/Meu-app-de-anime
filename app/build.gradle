import groovy.json.JsonBuilder

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id "com.apollographql.apollo3" version("3.7.0")
    id 'com.onesignal.androidsdk.onesignal-gradle-plugin'
    id "org.jlleitschuh.gradle.ktlint" version("11.0.0")
    id "org.jetbrains.kotlin.plugin.serialization" version '1.8.21'
}


android {

    signingConfigs {
        release {
            storeFile file('/Users/kl3jvi/StudioProjects/animity/animity')
            storePassword 'klejvi123'
            keyPassword 'klejvi123'
            keyAlias 'key0'
        }
    }

    compileSdk 33
    defaultConfig {
        namespace "com.kl3jvi.animity"
        applicationId "com.kl3jvi.animity"
        minSdk 21
        targetSdk 33
        versionCode 18
        versionName "1.1.8"
        archivesBaseName = "Animity-v$versionName"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    ndkVersion "25.1.8937393"

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release

            // Here we add a dependency to generate versionInfo.json
            applicationVariants.all { variant ->
                variant.assembleProvider.configure {
                    dependsOn generateVersionJson
                }
            }
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    kapt {
        useBuildCache true
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }


    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
            universalApk true
        }
    }
    lint {
        checkReleaseBuilds false
    }

    buildTypes {
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }

}
kapt {
    correctErrorTypes = true
}

ktlint {
    android = true
    ignoreFailures = false
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

apollo {
    packageName.set("com.kl3jvi.animity")
    generateKotlinModels.set(true)
    excludes.add("**/schema.json.graphql")
}

tasks.register('generateVersionJson') {
    doLast {

        def versionCodes = ["x86", "armeabi-v7a", "arm64_v8a", "x86_64", "universal"]

        def animityInfo = [:]

        def androidExtension = project.extensions.getByType(com.android.build.gradle.BaseExtension.class)

        versionCodes.each { versionCode ->
            def versionName = androidExtension.defaultConfig.versionName
            def patchVersion = versionName.split("\\.")[2].toInteger()

            def releaseTagParts = "0.2.0".split("\\.").collect { it.toInteger() }
            releaseTagParts[2] += patchVersion - 4

            if (releaseTagParts[2] > 9) {
                releaseTagParts[2] = 0
                releaseTagParts[1] += 1
                if (releaseTagParts[1] > 9) {
                    releaseTagParts[1] = 0
                    releaseTagParts[0] += 1
                }
            }

            def releaseTag = releaseTagParts.join(".")
            def archivesBaseName = "Animity-v${versionName}"
            def versionCodeNumber = androidExtension.defaultConfig.versionCode
            def updateMessage = "New update available" // Replace with the actual update message

            // Find the APK and calculate its size
            def apkFile = file("${rootDir}/app/release/${archivesBaseName}-${versionCode}-release.apk")
            def apkSize = apkFile.exists() ? String.format("%.2fMB", apkFile.length() / 1024.0 / 1024.0) : "Unknown size"

            animityInfo[versionCode] = [
                    "versionCode"   : versionCodeNumber,
                    "versionName"   : versionName,
                    "direct_link"   : "https://github.com/kl3jvi/animity/releases/download/v${releaseTag}/${archivesBaseName}-${versionCode}-release.apk",
                    "update_message": updateMessage,
                    "apkSize"       : apkSize
            ]
        }

        def jsonData = ["Animity": animityInfo]
        new File("${projectDir}/versionInfo.json").write(new JsonBuilder(jsonData).toPrettyString())
    }
}


dependencies {
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation libs.firebase.firestore.ktx
    implementation libs.androidx.media3.database
    def coordinatorLayoutVersion = "1.2.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorLayoutVersion"
    def androidCoreVersion = "1.9.0"
    implementation "androidx.core:core-ktx:$androidCoreVersion"

    def swipeVersion = "1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeVersion"


    def appCompatVersion = "1.5.1"
    def materialVersion = "1.6.1"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation 'com.github.brahmkshatriya:NiceHttp:1.1.0'


    def constraintLayoutVersion = "2.1.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    def livedataVersion = '2.5.1'
    def viewModelVersion = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedataVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelVersion"

    def navigationComponentVersion = '2.5.3'
    implementation "androidx.navigation:navigation-runtime-ktx:$navigationComponentVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationComponentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationComponentVersion"

    // Coroutines
    def coroutinesVersion = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Coroutine Lifecycle Scopes
    def lifecycle_version = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    def analyticsVersion = '21.2.2'
    implementation "com.google.firebase:firebase-analytics-ktx:$analyticsVersion"

    implementation 'com.google.firebase:firebase-dynamic-links:21.1.0'

    def crashlyticsVersion = '18.3.5'
    implementation "com.google.firebase:firebase-crashlytics-ktx:$crashlyticsVersion"

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")

    def remoteConfig = "21.2.1"
    implementation "com.google.firebase:firebase-config-ktx:$remoteConfig"


    // Hilt DI
    def hiltVersion = '2.44'
    def hiltAnnotationProcessor = '2.44'
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltAnnotationProcessor"

    // Retrofit
    def retrofitVersion = "2.9.0"
    def interceptor_version = "5.0.0-alpha.4"
    def dnsOverHttp = "5.0.0-alpha.6"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:$dnsOverHttp"

    //Html Parsing
    def jsoupVersion = "1.13.1"
    implementation "org.jsoup:jsoup:$jsoupVersion"

    //Room Library
    def room_version = "2.5.0"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Video Player
    def exoplayerVersion = '2.18.3'
    implementation "com.google.android.exoplayer:exoplayer:$exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-cast:$exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-okhttp:$exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayerVersion"


    //Expandable TextView
    def expandableTextViewVersion = "0.1.4"
    implementation "com.ms-square:expandableTextView:$expandableTextViewVersion"

    //animation lib
    def lottieVersion = '5.2.0'
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // image library
    def glideVersion = "4.13.2"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glideVersion") {
        exclude group: 'glide-parent'
    }

    //splash screen
    def splashVersion = '1.0.0'
    implementation "androidx.core:core-splashscreen:$splashVersion"

    def onesignalVersion = "4.6.2"
    implementation "com.onesignal:OneSignal:$onesignalVersion"

    def textUtilsVersion = '1.9'
    implementation "org.apache.commons:commons-text:$textUtilsVersion"

    // paging 3
    def paginationVersion = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paginationVersion"

    // browser
    def inAppBrowserVersion = "1.5.0"
    implementation "androidx.browser:browser:$inAppBrowserVersion"

    // Apollo GraphQl
    def apolloVersion = '3.7.0'
    implementation "com.apollographql.apollo3:apollo-runtime:$apolloVersion"

    // DataStore
    def dataStore_version = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$dataStore_version"

    def avatarView = '1.0.6'
    implementation "io.getstream:avatarview-coil:$avatarView"

//    def brainTree = "6.0.2"
//    implementation "com.braintreepayments.api:drop-in:$brainTree"

    implementation 'org.mozilla:rhino:1.7.14'


    def epoxyVersion = "5.1.1"
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-databinding:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-paging3:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    implementation 'com.onesignal:OneSignal:4.8.2'
    def markwonVersion = "4.6.2"
    implementation "io.noties.markwon:core:$markwonVersion"

    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.github.azhon:appupdate:4.2.7'

    def work_version = "2.8.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation "androidx.startup:startup-runtime:1.1.1"
    implementation 'net.danlew:android.joda:2.12.5'


    testImplementation 'app.cash.turbine:turbine:0.12.1'
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:1.5.0"
    testImplementation 'org.mockito:mockito-core:4.8.1'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation 'io.mockk:mockk:1.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation('com.apollographql.apollo3:apollo-testing-support:3.7.0')

}
